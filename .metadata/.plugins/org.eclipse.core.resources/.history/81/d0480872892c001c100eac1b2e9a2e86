#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <limits.h>

#include "Cliente.h"
#include "Output.h"

#define TRUE 0
#define FALSE 1
#define TAM 20
#define TAMPEDIDOS 20
#define MINIMO 1
#define MAXIMO 10
#define ITERADOR 0

int main(void) {


	setbuf(stdout,NULL);
	int idInicial = 0;
	int idModificar;
	int idEliminar;

	int idRecoleccion = 0;
	char nombreEmpresa[51];
	char localidad[25];
    float cantidadPolipropileno;
    char direccion[21];
	char cuit[12];
	float resultado;
	int respuesta;

	Clientes listado[TAM];
	Recoleccion cliente[TAM];

	if (InicializarClientes(listado,TAM) != -1 && InicializarPedidos(cliente,TAM) != -1){


   do{
			MostrarMenu();
			Opcion();
    	    scanf("%d",&respuesta);
    	    switch (respuesta) {
    			case 1:
    				idInicial++;
    				printf("Ingrese nombre de la empresa ");
    				fflush(stdin);
    				gets(nombreEmpresa);

    				printf("Ingrese la localidad Cliente ");
    				fflush(stdin);
    				gets(localidad);

    				printf("Ingrese la direccon del Cliente ");
    				fflush(stdin);
    				gets(direccion);

    				printf("Ingresar el cuit del Cliente ");
    				fflush(stdin);
    				gets(cuit);
    				if(AniadirCliente(listado, TAM, idInicial,nombreEmpresa,cuit,direccion,localidad) == 0){
    										printf("\n-----CLIENTE MODIFICADO EXITOSAMENTE-----\n");
    									}
    									else{
    										printf("\n-----EL CLIENTE NO PUDO SER MODIFICADO-----\n");
    									}

    				;

    				break;
    			case 2:
    				printf("¿Que cliente quiere modificar? Elegir por ID: ");
    				scanf("%d",&idModificar);
    				if(ModificarCliente(listado,TAM,idModificar) == 0){
						printf("\n-----CLIENTE MODIFICADO EXITOSAMENTE-----\n");
					}
					else{
						printf("\n-----EL CLIENTE NO PUDO SER MODIFICADO-----\n");
					}

    				break;

    			case 3:
    				printf("¿Que cliente quiere eliminar? Elegir por ID:");
    				scanf("%d",&idEliminar);
    				if(EliminarCliente(listado,TAM,idEliminar) == 0){
						printf("\n-----CLIENTE ELIMINADO EXITOSAMENTE-----\n");
					}
					else{
						printf("\n-----EL CLIENTE NO PUDO SER ELIMINADO-----\n");
					}


    				break;
    			case 4:
    				idRecoleccion++;
    				ImprimirClientes(listado, TAM);


    				if(CrearPedido(listado,cliente,TAM,idRecoleccion) == 0){
    					printf("\n-----PEDIDO CREADO EXITOSAMENTE-----\n");
    				}
    				else{
    					printf("\n-----EL PEDIDO NO PUDO SER CARGADO-----\n");
    				}

                    break;
    			case 5:
    				CambiarEstadoPedido(listado,cliente,TAM,&cantidadPolipropileno);
    				break;
    			case 6:

    				MostrarListadoPorCliente(listado,cliente,TAM);

    				break;
    			case 7:
    				MostrarListadoPorPedidoPendiente(listado,cliente,TAM);
    				break;
    			case 8:

    				MostrarListadoPorPedidoCompletado(listado,cliente,TAM);
    				break;
    			case 9:


    				MostrarPedidoPorLocalidad(listado,cliente,TAM);
    				break;
    			case 10:

    				resultado = CalcularPromedio(listado,cliente,idInicial,cantidadPolipropileno);
                    printf("El promedio de polipropileno reciclado por cliente es de: %.2f \n",resultado);
    				break;

    		}
	}while(respuesta != 11);
	 }






	/*printf("Ingrese el ID de un ciente: ");
	scanf("%d",&idCliente);
	printf("Ingrese los kilos para el cliente: ");
	scanf("%f",&kilosTotales);
	PedidoRecoleccion(listado,cliente,TAM,idCliente,kilosTotales);*/

	return EXIT_SUCCESS;

}

